rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User-specific folders: {userId}/genimg/*
    match /{userId}/genimg/{imageId} {
      // Public read for generated images (needed for display)
      allow read: if true;

      // Only owner can write (server uses Admin SDK which bypasses rules)
      allow write: if isOwner(userId);
    }

    // User avatar folder: {userId}/avatar/*
    match /{userId}/avatar/{filename} {
      // Public read for avatars
      allow read: if true;

      // Only owner can write (server uses Admin SDK which bypasses rules)
      allow write: if isOwner(userId);
    }

    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
